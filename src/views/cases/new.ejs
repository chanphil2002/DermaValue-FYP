<% layout('/layout/boilerplate') %>

<style>
  /* Hide spinner arrows in Flatpickr year and time pickers */
  .flatpickr-current-month .numInputWrapper span.arrowUp,
  .flatpickr-current-month .numInputWrapper span.arrowDown,
  .flatpickr-time .numInputWrapper span.arrowUp,
  .flatpickr-time .numInputWrapper span.arrowDown {
    display: none !important;
  }

  /* Always show both arrows */
  .flatpickr-months .flatpickr-prev-month,
  .flatpickr-months .flatpickr-next-month {
    visibility: visible !important;
    display: block !important;
  }

  /* If disabled (e.g. can't go to previous month), just reduce opacity and disable pointer */
  .flatpickr-months .flatpickr-prev-month.flatpickr-disabled {
    opacity: 0.3;
    pointer-events: none;
  }

  /* Make past dates gray */
  .flatpickr-day[aria-disabled="true"] {
    background-color: #e0e0e0 !important;
    color: #9e9e9e !important;
  }
</style>

<!--begin::App Content Header-->
<div class="app-content-header">
  <!--begin::Container-->
  <div class="container-fluid">
    <div class="row g-4 mb-3">
      <div class="col-6">
        <!--begin::Quick Example-->
        <div class="card card-primary card-outline mb-4">
          <!--begin::Header-->
          <div class="card-header">
            <div class="card-title">Submit New Case</div>
          </div>
          <!--end::Header-->
          <!--begin::Form-->
          <form action="/cases/" method="POST">
            <!--begin::Body-->
            <div class="card-body">
              <!-- Case Name -->
              <div class="mb-3">
                <label for="clinicName" class="form-label">Clinic</label>
                <input
                  type="text"
                  class="form-control"
                  id="clinicName"
                  name="clinic"
                  value="<%= clinic.name %>"
                  disabled
                />
                <input type="hidden" name="clinic" value="<%= clinic.id %>" />
                <div class="form-text">This is your selected Clinic.</div>
              </div>

              <!-- Disease Dropdown -->
              <div class="mb-3">
                <label for="disease" class="form-label">Disease</label>
                <select
                  name="diseaseId"
                  id="disease"
                  class="form-select"
                  required
                >
                  <option disabled selected value="">
                    -- Select Type of Disease --
                  </option>
                  <% diseases.forEach(disease => { %>
                  <option value="<%= disease.id %>"><%= disease.name %></option>
                  <% }) %>
                </select>
              </div>

              <!-- Case Description -->
              <div class="mb-3">
                <label for="caseDescription" class="form-label"
                  >Description</label
                >
                <textarea
                  name="description"
                  id="caseDescription"
                  class="form-control"
                  rows="3"
                ></textarea>
                <div class="form-text">
                  Provide a detailed description of the case.
                </div>
              </div>

              <!-- Case Image Upload -->
              <!-- <div class="input-group mb-3">
                <input
                  name="caseImageFile"
                  type="file"
                  class="form-control"
                  id="inputGroupFile02"
                />
                <label class="input-group-text" for="inputGroupFile02"
                  >Upload Image</label
                >
              </div> -->

              <div class="container mt-6">
                <div class="row">
                  <!-- Date Picker -->
                  <div class="col-12 col-md-6 mb-3">
                    <label for="date-picker" class="form-label"
                      >Select Appointment Date</label
                    >
                    <input
                      id="date-picker"
                      class="flatpickr-input form-control"
                      type="text"
                      placeholder="Select Date"
                      name="date"
                    />
                  </div>
                  <!-- Time Picker -->
                  <div class="col-12 col-md-6 mb-3">
                    <label for="time-picker" class="form-label"
                      >Select Appointment Time</label
                    >
                    <select id="custom-time-picker" class="form-select">
                      <option disabled selected>Select Time</option>
                    </select>
                  </div>
                </div>
              </div>
            </div>
            <!--end::Body-->

            <!--begin::Footer-->
            <div class="card-footer">
              <button type="submit" class="btn btn-primary">Submit</button>
            </div>
            <!--end::Footer-->
          </form>
          <!--end::Form-->
        </div>
      </div>
    </div>
  </div>

  <!--end::Container-->
</div>
<!--end::App Content-->

<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

<script>
  // Date picker config
  flatpickr("#date-picker", {
    minDate: "today",
    dateFormat: "d F Y",
    disableMobile: true,
    onReady: function (selectedDates, dateStr, instance) {
      // Disable year input
      const yearInput = instance.calendarContainer.querySelector(
        ".flatpickr-current-month .numInput"
      );
      if (yearInput) {
        yearInput.disabled = true;
        yearInput.style.opacity = "0.5";
        yearInput.style.pointerEvents = "none";
      }
    },
  });

  function formatTime(hour, minute) {
    const ampm = hour >= 12 ? "pm" : "am";
    let displayHour = hour % 12;
    displayHour = displayHour === 0 ? 12 : displayHour;
    const displayMinute = minute.toString().padStart(2, "0");
    return `${displayHour}:${displayMinute}${ampm}`;
  }

  function generateTimeRangeOptions(
    startHour = 9,
    endHour = 17,
    interval = 30
  ) {
    const timePicker = document.getElementById("custom-time-picker");

    for (let hour = startHour; hour < endHour; hour++) {
      for (let min = 0; min < 60; min += interval) {
        const start = formatTime(hour, min);
        let endHourCalc = hour;
        let endMin = min + interval;
        if (endMin >= 60) {
          endMin = 0;
          endHourCalc += 1;
        }
        if (endHourCalc > endHour) break;

        const end = formatTime(endHourCalc, endMin);
        const option = document.createElement("option");
        option.value = `${start} - ${end}`;
        option.textContent = `${start} - ${end}`;
        timePicker.appendChild(option);
      }
    }
  }

  generateTimeRangeOptions();
</script>
